{"version":3,"sources":["webpack:///./src/views/Messages.vue","webpack:///./src/views/Messages.vue?430c"],"names":["id","class","ref","style","type","placeholder","searchInput","handleSearchBackDrop","displaySearchContents","filteredSearchList","user","key","userName","showMessage","src","$store","state","users","userProfileImage","alt","searchNotFound","chatListBackDrop","messagesEmpty","chattedUsersList","activeChattedUser","handleImages","userData","messageStatus","messageViewStatus","showDateInWords","chattedUsersInfo","messageDate","handleMessageSlice","message","handleMessageStatus","messageId","icon","handleCheckStyle","filUpStyle","handleNavCollapse","userProfilePicture","friendMessaged","showChatList","showingMessages","handleUserChatBoxStyle","length","showDate","handleSubmitMessage","friends","friend","name","props","data","showingMessage","showingMessageStatus","messageUserProfilePicture","messageUserName","displayChatList","filteredSearchLists","messages","watchDelay","watch","handler","setTimeout","loadData","deep","mounted","this","beforeUnmount","methods","messageOnScreen","dispatch","activeLink","params","push","filter","messagedUserName","displayFunctions","displayMessage","notificationStatus","notificationType","scrollToBottom","messageBox","document","getElementsByClassName","messageBoxDisktopView","scrollIntoView","behavior","show","slicedMessage","slice","v1","userId","Date","now","friendUserName","notificationId","notificationDate","status","chatList","Object","keys","includes","$refs","classList","add","containerMessage","remove","date","currentDate","dateStatus","minutes","Math","round","hours","days","weeks","months","years","format","handleDeleteMessage","navCollapsed","handleChatList","messageStatusList","messageChatList","forEach","chat","sort","a","b","reverse","computed","nameA","toUpperCase","nameB","toLowerCase","indexOf","storeData","chatUserName","messageObjects","render"],"mappings":"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","file":"js/Messages.e79a0650.js","sourcesContent":["<template>\r\n  <section id=\"messageBox\">\r\n    <div class=\"message-container\">\r\n\r\n      <div class=\"list-container-left container-mobile-view  \" ref=\"chatList\">\r\n\r\n        <div class=\"chat-list\">\r\n          <div class=\"header-chat-list\">\r\n            <h5>Chats</h5>\r\n            <div class=\"search-chat-list\">\r\n              <input type=\"text\" placeholder=\"Search Chats...\" v-model=\"searchInput\"\r\n                @click=\"handleSearchBackDrop('open')\">\r\n              <div class=\"search-contents\" v-if=\"displaySearchContents\">\r\n                <ul v-for=\"user in filteredSearchList\" :key=\"user.userName\">\r\n                  <li @click=\"showMessage(user.userName, 'Read')\">\r\n                    <img :src=\"$store.state.users[user.userName].userProfileImage\" alt=\"\">\r\n                    <span class=\"names-Bold\"> {{user.userName}}</span>\r\n                  </li>\r\n                </ul>\r\n                <div v-if=\"searchNotFound\" style=\"text-align:center\">User Not Found</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"chat-list-backDrop\" v-if=\"chatListBackDrop\" @click=\"handleSearchBackDrop('close')\"></div>\r\n          </div>\r\n\r\n\r\n\r\n          <div v-for=\"user in chattedUsersList\" :key=\"user.userName\" @click=\"showMessage(user.userName, 'Read')\"\r\n            :style=\"activeChattedUser(user.showMessage)\" v-if=\"messagesEmpty\">\r\n\r\n            <div class=\"user-MessageDetails-container\">\r\n\r\n              <div class=\"notice-image-container\">\r\n\r\n                <img :src=\"handleImages(user.userName)\" alt=\"\">\r\n                <div class=\"new-message-alert\"\r\n                  v-if=\"userData.messageStatus[user.userName].messageViewStatus === 'unRead'\">\r\n\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"userName-data-container\">\r\n\r\n                <div class=\"side-userName\">\r\n                  <span class=\"username-header\">{{user.userName}}</span>\r\n                  <span>{{showDateInWords(chattedUsersInfo[user.userName].messageDate,user.userName)}}</span>\r\n\r\n                </div>\r\n\r\n\r\n                <div class=\"side-user-message\">\r\n                  <span v-if=\"chattedUsersInfo[user.userName].userName === userData.userName\" class=\"shortMessage \">\r\n                    <span style=\"font-weight: 600;\">You:&nbsp</span> <span\r\n                      class=\"message-ellipsis\">{{handleMessageSlice(chattedUsersInfo[user.userName].message)}}</span>\r\n                  </span>\r\n                  <span v-else class=\"shortMessage\">\r\n                    {{ handleMessageSlice(chattedUsersInfo[user.userName].message)}}</span>\r\n                  <span class=\"sideMessageCheck\">\r\n                    <font-awesome-icon :icon=\"['fas', 'check']\" class=\"check-side\"\r\n                      v-if=\"handleMessageStatus(chattedUsersInfo[user.userName].messageStatus, chattedUsersInfo[user.userName].messageId)\" />\r\n                    <font-awesome-icon :icon=\"['fas', 'check-double']\" class=\"check-double-side\"\r\n                      v-if=\"!handleMessageStatus(chattedUsersInfo[user.userName].messageStatus, chattedUsersInfo[user.userName].messageId)\"\r\n                      :class=\"handleCheckStyle(chattedUsersInfo[user.userName].messageStatus)\" />\r\n\r\n                  </span>\r\n\r\n\r\n\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"list-container-left  container-desktop-view\">\r\n\r\n        <div class=\"chat-list\">\r\n          <div class=\"header-chat-list\">\r\n            <h5>Chats</h5>\r\n\r\n\r\n            <div class=\"search-chat-list\">\r\n              <input type=\"text\" placeholder=\"Search Chats...\" v-model=\"searchInput\"\r\n                @click=\"handleSearchBackDrop('open')\">\r\n              <div class=\"search-contents\" v-if=\"displaySearchContents\">\r\n                <ul v-for=\"user in filteredSearchList\" :key=\"user.userName\">\r\n                  <li @click=\"showMessage(user.userName, 'Read')\">\r\n                    <img :src=\"$store.state.users[user.userName].userProfileImage\" alt=\"\">\r\n                    <span class=\"names-Bold\"> {{user.userName}}</span>\r\n                  </li>\r\n                </ul>\r\n                <div v-if=\"searchNotFound\" style=\"text-align:center\">User Not Found</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"chat-list-backDrop\" v-if=\"chatListBackDrop\" @click=\"handleSearchBackDrop('close')\"></div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n          <div class=\"empty-chat-list\" v-if=\"!messagesEmpty\">\r\n            <span>You Have No Chats</span>\r\n          </div>\r\n          <div>\r\n\r\n\r\n          </div>\r\n\r\n          <div v-for=\"user in chattedUsersList\" :key=\"user.userName\" @click=\"showMessage(user.userName, 'Read')\"\r\n            :style=\"activeChattedUser(user.showMessage)\" v-if=\"messagesEmpty\">\r\n\r\n            <div class=\"user-MessageDetails-container\">\r\n\r\n              <div class=\"notice-image-container\">\r\n\r\n                <img :src=\"handleImages(user.userName)\" alt=\"\">\r\n                <div class=\"new-message-alert\"\r\n                  v-if=\"userData.messageStatus[user.userName].messageViewStatus === 'unRead'\">\r\n\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"userName-data-container\">\r\n\r\n                <div class=\"side-userName\">\r\n                  <span class=\"username-header\">{{user.userName}}</span>\r\n                  <span>{{showDateInWords(chattedUsersInfo[user.userName].messageDate)}}</span>\r\n\r\n                </div>\r\n\r\n\r\n                <div class=\"side-user-message\">\r\n                  <span v-if=\"chattedUsersInfo[user.userName].userName === userData.userName\" class=\"shortMessage\">\r\n                    <span style=\"font-weight: 600;\">You:&nbsp</span> <span class=\"message-ellipsis\">{{\r\n                      handleMessageSlice(chattedUsersInfo[user.userName].message)}}</span>\r\n                  </span>\r\n                  <span v-else class=\"shortMessage\">\r\n                    {{ handleMessageSlice(chattedUsersInfo[user.userName].message)}}</span>\r\n                  <span class=\"sideMessageCheck\">\r\n                    <font-awesome-icon :icon=\"['fas', 'check']\" class=\"check-side\"\r\n                      v-if=\"handleMessageStatus(chattedUsersInfo[user.userName].messageStatus, chattedUsersInfo[user.userName].messageId)\" />\r\n                    <font-awesome-icon :icon=\"['fas', 'check-double']\" class=\"check-double-side\"\r\n                      v-if=\"!handleMessageStatus(chattedUsersInfo[user.userName].messageStatus, chattedUsersInfo[user.userName].messageId)\"\r\n                      :class=\"handleCheckStyle(chattedUsersInfo[user.userName].messageStatus)\" />\r\n\r\n                  </span>\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"container-message  container-desktop-view\">\r\n        <div class=\"fill-up-container\" :style=\"filUpStyle\"></div>\r\n        <div class=\"messager-Header\" :style=\"handleNavCollapse()\">\r\n          <img :src=\"userProfilePicture\" alt=\"\" v-if=\"messagesEmpty\">\r\n\r\n\r\n          <h5>{{friendMessaged}}</h5>\r\n          <span @click=\"showChatList\" class=\"return-chatlist-btn\">\r\n            <span>\r\n              <font-awesome-icon :icon=\"['fas', 'chevron-left']\" />\r\n            </span>\r\n\r\n          </span>\r\n        </div>\r\n        <div class=\"trysrcoll\" id=\"messageBody\">\r\n          <div class=\"empty-chat-list\" v-if=\"!messagesEmpty\">\r\n            <span>You Have No Messages</span>\r\n          </div>\r\n\r\n<div class=\"pulldown\"></div>\r\n\r\n          <div v-for=\"message in showingMessages\" :key=\"message.messageId\"\r\n            class=\"message-body  message-body-disktopView\" :class=\"handleUserChatBoxStyle(message.userName)\"\r\n            v-if=\"messagesEmpty\">\r\n\r\n            <img :src=\"handleImages(message.userName)\" v-if=\"message.messageStatus.length\" alt=\"\">\r\n            <div class=\"message-Box\" v-if=\"message.messageStatus.length\">\r\n              <font-awesome-icon :icon=\"['fas', 'caret-right']\" class=\"caret-right\" />\r\n              <font-awesome-icon :icon=\"['fas', 'caret-left']\" class=\"caret-left\" />\r\n              <div>\r\n\r\n                <h6 class=\"username-header\">{{ message.userName }}</h6>\r\n\r\n                <span>{{ showDate(message.messageDate) }}\r\n\r\n                </span>\r\n\r\n              </div>\r\n              <hr>\r\n              <span class=\"message-background\">\r\n                {{ message.message }}\r\n\r\n              </span>\r\n\r\n\r\n\r\n              <span class=\"message-status\">\r\n                <font-awesome-icon :icon=\"['fas', 'check']\" class=\"check\"\r\n                  v-if=\"handleMessageStatus(message.messageStatus, message.messageId)\" />\r\n                <font-awesome-icon :icon=\"['fas', 'check-double']\" class=\"check-double\"\r\n                  v-if=\"!handleMessageStatus(message.messageStatus, message.messageId)\"\r\n                  :class=\"handleCheckStyle(message.messageStatus)\" />\r\n              </span>\r\n            </div>\r\n            <!-- <p>  {{moment().format('LT')}} </p> -->\r\n\r\n            <!-- \r\n        <input type=\"text\" value=\"delete message\" class=\"btn btn-danger\" @click=\"\r\n            handleDeleteMessage(\r\n              userData.userName,\r\n              friendMessaged,\r\n              message.messageId\r\n            )\r\n          \" /> -->\r\n          </div>\r\n        </div>\r\n        <form @submit.prevent=\"handleSubmitMessage\" class=\"message-input-field\">\r\n          <input type=\"text\" v-model=\"message\" placeholder=\" Type your message\" />\r\n          <img :src=\"userData.userProfileImage\" alt=\"\">\r\n          <!-- <button type=\"submit\" class=\"btn btn-success\">send</button> -->\r\n        </form>\r\n      </div>\r\n\r\n      <div class=\"container-message  container-mobile-view  container-mobileView\" ref=\"containerMessage\">\r\n        <div class=\"fill-up-container\" :style=\"filUpStyle\"></div>\r\n        <div class=\"messager-Header\" :style=\"handleNavCollapse()\">\r\n          <img :src=\"userProfilePicture\" alt=\"\" v-if=\"messagesEmpty\">\r\n\r\n\r\n          <h5>{{friendMessaged}}</h5>\r\n          <span @click=\"showChatList\" class=\"return-chatlist-btn\">\r\n            <span>\r\n              <font-awesome-icon :icon=\"['fas', 'chevron-left']\" />\r\n            </span>\r\n\r\n          </span>\r\n        </div>\r\n        <div class=\"trysrcoll\" id=\"messageBody\">\r\n          <div class=\"empty-chat-list\" v-if=\"!messagesEmpty\">\r\n            <span>You Have No Messages</span>\r\n          </div>\r\n          <div v-for=\"message in showingMessages\" :key=\"message.messageId\" class=\"message-body\"\r\n            :class=\"handleUserChatBoxStyle(message.userName)\" v-if=\"messagesEmpty\">\r\n\r\n            <img :src=\"handleImages(message.userName)\" v-if=\"message.messageStatus.length\" alt=\"\">\r\n            <div class=\"message-Box\" v-if=\"message.messageStatus.length\">\r\n              <font-awesome-icon :icon=\"['fas', 'caret-right']\" class=\"caret-right\" />\r\n              <font-awesome-icon :icon=\"['fas', 'caret-left']\" class=\"caret-left\" />\r\n              <div>\r\n\r\n                <h6 class=\"username-header\">{{ message.userName }}</h6>\r\n\r\n                <span>{{ showDate(message.messageDate) }}\r\n\r\n                </span>\r\n\r\n              </div>\r\n              <hr>\r\n              <span class=\"message-background\">\r\n                {{ message.message }}\r\n\r\n              </span>\r\n\r\n\r\n\r\n              <span class=\"message-status\">\r\n                <font-awesome-icon :icon=\"['fas', 'check']\" class=\"check\"\r\n                  v-if=\"handleMessageStatus(message.messageStatus, message.messageId)\" />\r\n                <font-awesome-icon :icon=\"['fas', 'check-double']\" class=\"check-double\"\r\n                  v-if=\"!handleMessageStatus(message.messageStatus, message.messageId)\"\r\n                  :class=\"handleCheckStyle(message.messageStatus)\" />\r\n              </span>\r\n            </div>\r\n            <!-- <p>  {{moment().format('LT')}} </p> -->\r\n\r\n            <!-- \r\n        <input type=\"text\" value=\"delete message\" class=\"btn btn-danger\" @click=\"\r\n            handleDeleteMessage(\r\n              userData.userName,\r\n              friendMessaged,\r\n              message.messageId\r\n            )\r\n          \" /> -->\r\n          </div>\r\n        </div>\r\n        <form @submit.prevent=\"handleSubmitMessage\" class=\"message-input-field\">\r\n          <input type=\"text\" v-model=\"message\" placeholder=\" Type your message\" />\r\n          <img :src=\"userData.userProfileImage\" alt=\"\">\r\n          <!-- <button type=\"submit\" class=\"btn btn-success\">send</button> -->\r\n        </form>\r\n      </div>\r\n\r\n\r\n      <div class=\"list-container-right \">\r\n\r\n\r\n        <div class=\"friends-list-container\">\r\n          <div class=\"friends-listHeader\">\r\n            <h5>Friends</h5>\r\n          </div>\r\n          <div class=\"empty-chat-list\" v-if=\"!userData.friends.length\">\r\n            <span>You Have No Friends</span>\r\n          </div>\r\n          <div v-for=\"friend in userData.friends\" :key=\"friend.userName\" v-if=\"userData.friends.length\">\r\n            <div @click='showMessage(friend.userName,\"newMessage\")' class=\"friendLists\">\r\n              <img :src=\"handleImages(friend.userName)\" alt=\"\"> <span class=\"username-header\">{{ friend.userName\r\n                }}</span>\r\n              <div class=\"message-friend\">\r\n                <button class=\"btn btn-success \">Chat</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\n  import { uuid } from \"vue-uuid\";\r\n  import moment from \"moment\";\r\n\r\n  export default {\r\n    name: \"Messages\",\r\n    props: [\"userName\"],\r\n\r\n    data() {\r\n      return {\r\n        userData: {\r\n          messageStatus: {}\r\n        },\r\n        showingMessage: [],\r\n        friendMessaged: \"\",\r\n        chattedUsersInfo: [],\r\n        message: \"\",\r\n        showingMessageStatus: [],\r\n        chattedUsersList: [],\r\n        messageUserProfilePicture: '',\r\n        userProfilePicture: '',\r\n        messageUserName: '',\r\n        // displayMessage: '',\r\n        displayChatList: '',\r\n        filUpStyle: '',\r\n        messagesEmpty: true,\r\n        searchInput: \"\",\r\n        displaySearchContents: false,\r\n        filteredSearchLists: [],\r\n        chatListBackDrop: false,\r\n        messages: {},\r\n        watchDelay: true,\r\n      };\r\n    },\r\n    watch: {\r\n      messages: {\r\n        handler(state) {\r\n          setTimeout(() => {\r\n            this.loadData(\"on\")\r\n            this.watchDelay = false\r\n          }, 2000);\r\n        },\r\n        deep: true\r\n\r\n      }\r\n\r\n    },\r\n\r\n    mounted() {\r\n      this.loadData(\"on\");\r\n\r\n    },\r\n    beforeUnmount() {\r\n      this.loadData(\"off\");\r\n\r\n    },\r\n    methods: {\r\n      loadData(messageOnScreen) {\r\n\r\n        this.userData = this.$store.state.users[this.userName];\r\n\r\n        if (messageOnScreen === \"on\") {\r\n          this.$store.dispatch(\"handleDisplayFunctions\", {\r\n            activeLink: \"Messages\",\r\n            params: \"activeLink\"\r\n          })\r\n        } else {\r\n          this.$store.dispatch(\"handleDisplayFunctions\", {\r\n            activeLink: \"\",\r\n            params: \"activeLink\"\r\n          })\r\n          this.watchDelay = true\r\n\r\n        }\r\n\r\n        let messageStatus = [];\r\n\r\n        for (const message in this.userData.messageStatus) {\r\n          messageStatus.push(this.userData.messageStatus[message]);\r\n        }\r\n\r\n        if (messageStatus.length) {\r\n          this.showingMessageStatus = messageStatus.filter((message) => message.showMessage);\r\n\r\n          this.showingMessage = this.userData.messages[this.showingMessageStatus[0].friendMessaged];\r\n\r\n\r\n\r\n          this.friendMessaged = this.showingMessageStatus[0].friendMessaged\r\n          this.messagesEmpty = true\r\n        } else {\r\n\r\n          this.messagesEmpty = false\r\n\r\n        }\r\n\r\n\r\n        let messagedUserName = this.$store.state.displayFunctions.displayMessage.userName\r\n\r\n        if (messageStatus.length || messagedUserName.length) {\r\n\r\n          if (messagedUserName.length) {\r\n\r\n            this.showMessage(messagedUserName, \"newMessage\");\r\n          } else {\r\n            this.showMessage(this.friendMessaged, \"Read\", messageOnScreen);\r\n          }\r\n          this.$store.dispatch(\"handleNotificationUpdate\", {\r\n            userName: this.userData.userName,\r\n            notificationStatus: \"Read\",\r\n            notificationType: 'message'\r\n          });\r\n\r\n        }\r\n\r\n      },\r\n\r\n\r\n\r\n\r\n      scrollToBottom() {\r\n        const messageBox = document.getElementsByClassName('message-body')[document.getElementsByClassName('message-body').length - 1];\r\n        const messageBoxDisktopView = document.getElementsByClassName('message-body-disktopView')[document.getElementsByClassName('message-body-disktopView').length - 1];\r\n\r\n        setTimeout(() => {\r\n          if (messageBox) {\r\n\r\n            messageBox.scrollIntoView({ behavior: 'smooth' });\r\n          }\r\n        }, 100);\r\n\r\n\r\n        setTimeout(() => {\r\n          if (messageBoxDisktopView) {\r\n\r\n            messageBoxDisktopView.scrollIntoView({ behavior: 'smooth' });\r\n          }\r\n        }, 100);\r\n\r\n\r\n      },\r\n\r\n      activeChattedUser(show) {\r\n        if (show) {\r\n\r\n          return \"background-color:rgba(232, 62, 140, 0.52)\"\r\n        }\r\n\r\n        return \"background-color:white\"\r\n      },\r\n\r\n\r\n      handleSearchBackDrop(params) {\r\n        if (params === \"open\") {\r\n\r\n\r\n          return this.chatListBackDrop = true\r\n        }\r\n        this.searchInput = \"\";\r\n        this.displaySearchContents = false;\r\n        this.filteredSearchLists = [];\r\n        return this.chatListBackDrop = false\r\n\r\n      },\r\n\r\n      handleMessageSlice(message) {\r\n        if (message.length > 15) {\r\n          let slicedMessage = message.slice(0, 14) + \"....\"\r\n          return slicedMessage\r\n        }\r\n\r\n        return message\r\n\r\n      },\r\n\r\n\r\n      handleUserChatBoxStyle(userName) {\r\n        if (userName === this.userName) {\r\n          return \"this-user\"\r\n        }\r\n        return \"other-user\";\r\n\r\n      },\r\n\r\n\r\n\r\n\r\n      handleImages(userName) {\r\n        if (this.$store.state.users[userName].userProfileImage.length) {\r\n          return this.$store.state.users[userName].userProfileImage\r\n\r\n        }\r\n\r\n\r\n\r\n        return \"https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/512x512/plain/user.png\"\r\n      },\r\n\r\n      handleSubmitMessage() {\r\n\r\n        const messageId = uuid.v1();\r\n        if (this.message && this.friendMessaged) {\r\n          this.$store.dispatch(\"handleSubmitMessage\", {\r\n            [messageId]: {\r\n              userName: this.userData.userName,\r\n              friendMessaged: this.friendMessaged,\r\n              userId: this.userData.userId,\r\n              message: this.message,\r\n              messageId,\r\n              messageDate: Date.now(),\r\n              messageStatus: \"sent\",\r\n            },\r\n          });\r\n          this.showMessage(this.friendMessaged, \"unRead\");\r\n\r\n\r\n\r\n          this.$store.dispatch(\"handleNotifications\", {\r\n            userName: this.userData.userName,\r\n            friendUserName: this.friendMessaged,\r\n            notificationId: uuid.v1(),\r\n            notificationType: 'message',\r\n            notificationStatus: \"unRead\",\r\n            notificationDate: Date.now()\r\n          });\r\n\r\n          this.message = \"\";\r\n          this.showingMessage = this.userData.messages[this.friendMessaged];\r\n        }\r\n        this.scrollToBottom()\r\n      },\r\n\r\n\r\n\r\n      showMessage(userName, status, messageOnScreen) {\r\n\r\n        this.userProfilePicture = this.handleImages(userName);\r\n        this.friendMessaged = userName;\r\n        let chatList = Object.keys(this.userData.messageStatus)\r\n\r\n        if (!chatList.includes(userName) && status === \"newMessage\") {\r\n          this.showingMessage = {\r\n            'none': {\r\n              messageId: \"none\",\r\n              messageDate: '',\r\n              userName: this.userName,\r\n              message: '',\r\n              messageStatus: '',\r\n            }\r\n          }\r\n          this.messagesEmpty = true\r\n\r\n          this.$store.dispatch(\"handleDisplayFunctions\", {\r\n            userName: '',\r\n            params: \"displayMessage\"\r\n          })\r\n\r\n\r\n\r\n\r\n        }\r\n        else {\r\n          this.$store.dispatch(\"handleMessageViewStatus\", {\r\n            friendMessaged: userName,\r\n            messageOnScreen,\r\n            userName: this.userName,\r\n            messageViewStatus: status,\r\n            showMessage: false,\r\n\r\n          });\r\n          this.showingMessage = this.userData.messages[userName];\r\n        }\r\n        this.$refs.chatList.classList.add(\"container-mobileView\")\r\n        this.$refs.containerMessage.classList.remove(\"container-mobileView\")\r\n        this.handleSearchBackDrop('close')\r\n\r\n      },\r\n\r\n\r\n\r\n      showChatList() {\r\n        this.$refs.containerMessage.classList.add(\"container-mobileView\")\r\n        this.$refs.chatList.classList.remove(\"container-mobileView\")\r\n      },\r\n\r\n\r\n\r\n\r\n      handleMessageStatus(messageStatus, messageId) {\r\n\r\n        if (messageStatus === \"sent\") {\r\n          return true;\r\n        } else if (messageStatus === \"received\") {\r\n\r\n\r\n          return false;\r\n        } else if (messageStatus === \"Read\") {\r\n          return false;\r\n        }\r\n      },\r\n      handleCheckStyle(messageStatus) {\r\n        if (messageStatus === \"received\") {\r\n          return \"check-double\";\r\n        }\r\n        return \"check-double-read\"\r\n\r\n      },\r\n\r\n\r\n      showDateInWords(date, userName) {\r\n        const currentDate = Date.now();\r\n        const dateStatus = currentDate - date;\r\n        const minutes = Math.round(dateStatus / (1000 * 60));\r\n        const hours = Math.round(dateStatus / (1000 * 60 * 60));\r\n        const days = Math.round(dateStatus / (1000 * 60 * 60 * 24));\r\n        const weeks = Math.round(dateStatus / (1000 * 60 * 60 * 24 * 7));\r\n        const months = Math.round(dateStatus / (1000 * 60 * 60 * 24 * 7 * 12));\r\n        const years = Math.round(dateStatus / (1000 * 60 * 60 * 365));\r\n\r\n        if (minutes <= 0) {\r\n          return \"Just now\";\r\n        } else if (minutes < 59) {\r\n          return minutes === 1 ? \"1 minute ago\" : minutes + \" minutes ago\";\r\n        } else if (hours < 11) {\r\n          return hours === 1 ? \"1 hour ago\" : hours + \" hours ago\";\r\n        } else if (days >= 1) {\r\n          return days === 1 ? \"1 day ago\" : days + \" days ago\";\r\n        } else if (weeks < 59) {\r\n          return weeks === 1 ? \"1 week ago\" : weeks + \" weeks ago\";\r\n        } else if (months < 59) {\r\n          return months === 1 ? \"1 month ago\" : months + \" mouths ago\";\r\n        } else {\r\n          return years === 1 ? \"1 year ago\" : years + \" years ago\";\r\n        }\r\n      },\r\n\r\n\r\n\r\n\r\n      showDate(messageDate) {\r\n\r\n        let currentDate = Date.now();\r\n        let dateStatus = currentDate - messageDate;\r\n        const minutes = Math.round(dateStatus / (1000 * 60));\r\n        const hours = Math.round(dateStatus / (1000 * 60 * 60));\r\n        const days = Math.round(dateStatus / (1000 * 60 * 60 * 24));\r\n        const weeks = Math.round(dateStatus / (1000 * 60 * 60 * 24 * 7));\r\n        const months = Math.round(dateStatus / (1000 * 60 * 60 * 24 * 7 * 12));\r\n        const years = Math.round(dateStatus / (1000 * 60 * 60 * 365));\r\n\r\n        if (minutes <= 0) {\r\n          return \"Just now\";\r\n        } else if (minutes < 59) {\r\n          return minutes === 1 ? \"1 minute ago\" : minutes + \"minutes ago\";\r\n        } else if (hours < 11) {\r\n          return moment(messageDate).format(\" h:mm :ss a L\");\r\n        } else if (days >= 1) {\r\n          return moment(messageDate).format(\" h:mm:ss a L\");\r\n        } else if (weeks < 59) {\r\n          return moment(messageDate).format(\" h:mm :ss a L\");\r\n        } else if (months < 59) {\r\n          return moment(messageDate).format(\" h:mm :SS a L\");\r\n        } else {\r\n          return moment(messageDate).format(\" h:mm a  L\");\r\n        }\r\n      },\r\n\r\n      handleDeleteMessage(userName, friendMessaged, messageId) {\r\n        this.$store.dispatch(\"handleDeleteMessage\", {\r\n          userName,\r\n          friendMessaged,\r\n          messageId,\r\n        });\r\n      },\r\n      handleNavCollapse() {\r\n        if (this.$store.state.displayFunctions.navCollapsed) {\r\n\r\n          this.filUpStyle = \"height:130px\"\r\n          return \"margin-top:-90px\"\r\n\r\n        }\r\n        this.filUpStyle = \"height:160px\"\r\n\r\n        return \"margin-top:0\"\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n      handleChatList() {\r\n        let messageStatusList = Object.keys(this.userData.messageStatus)\r\n        let messageChatList = []\r\n        messageStatusList.forEach(chat => {\r\n          messageChatList = [...messageChatList, { userName: chat, showMessage: this.userData.messageStatus[chat].showMessage, messageDate: this.userData.messageStatus[chat].messageDate }]\r\n        });\r\n\r\n        this.chattedUsersList = messageChatList.sort((a, b) => a.messageDate - b.messageDate).reverse()\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    },\r\n    computed: {\r\n      filteredSearchList() {\r\n        let filteredSearchList = this.chattedUsersList.sort(function (a, b) {\r\n          var nameA = a.userName.toUpperCase();\r\n          var nameB = b.userName.toUpperCase();\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }).filter((user) => {\r\n          return (\r\n            user.userName\r\n              .toLowerCase()\r\n              .indexOf(this.searchInput.toLowerCase()) !== -1\r\n          );\r\n        })\r\n\r\n        this.filteredSearchLists = filteredSearchList\r\n\r\n        return this.filteredSearchLists\r\n      },\r\n\r\n      searchNotFound() {\r\n\r\n        if (this.filteredSearchLists.length) {\r\n          return false\r\n\r\n        }\r\n        return true\r\n      },\r\n\r\n\r\n\r\n\r\n      showingMessages() {\r\n\r\n        this.userData = this.$store.state.users[this.userName];\r\n        this.messages = this.$store.state.users[this.userName].messages\r\n        this.storeData = this.$store.state\r\n        this.searchInput.length ? this.displaySearchContents = true : this.displaySearchContents = false\r\n\r\n        this.handleChatList()\r\n\r\n        let chattedUsersInfo = {};\r\n\r\n\r\n        for (const chatUserName in this.userData.messageStatus) {\r\n\r\n          let messageObjects = []\r\n          for (const messageId in this.userData.messages[chatUserName]) {\r\n            messageObjects = [...messageObjects, this.userData.messages[chatUserName][messageId]]\r\n              .sort((a, b) => a.messageDate - b.messageDate)\r\n\r\n          }\r\n          chattedUsersInfo = { ...chattedUsersInfo, [chatUserName]: messageObjects[messageObjects.length - 1] }\r\n\r\n        }\r\n\r\n\r\n\r\n        this.chattedUsersInfo = chattedUsersInfo;\r\n\r\n\r\n        let showingMessages = [];\r\n\r\n        for (const message in this.showingMessage) {\r\n          showingMessages.push(this.showingMessage[message]);\r\n        }\r\n        return showingMessages.sort((a, b) => a.messageDate - b.messageDate);\r\n      },\r\n    },\r\n  };\r\n</script>","import { render } from \"./Messages.vue?vue&type=template&id=dc2af2d6\"\nimport script from \"./Messages.vue?vue&type=script&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}