{"version":3,"sources":["webpack:///./src/views/Messages.vue","webpack:///./src/views/Messages.vue?6e71"],"names":["id","class","ref","style","type","placeholder","searchInput","handleSearchBackDrop","displaySearchContents","filteredSearchList","user","key","userName","showMessage","src","$store","state","users","userProfileImage","alt","searchNotFound","chatListBackDrop","messagesEmpty","chattedUsersList","activeChattedUser","handleImages","showDateInWords","handleMessageSlice","icon","chattedUsersInfo","messageDate","filUpStyle","handleNavCollapse","userProfilePicture","friendMessaged","showChatList","showingMessages","message","messageId","handleUserChatBoxStyle","messageStatus","length","showDate","handleCheckStyle","handleSubmitMessage","userData","friends","friend","name","props","showingMessage","showingMessageStatus","messageUserProfilePicture","messageUserName","displayChatList","filteredSearchLists","messages","watchDelay","watch","setTimeout","this","loadData","deep","methods","messageOnScreen","dispatch","activeLink","params","push","filter","messagedUserName","displayFunctions","displayMessage","notificationStatus","notificationType","messageBox","document","getElementsByClassName","messageBoxDisktopView","scrollIntoView","behavior","show","slicedMessage","slice","v1","userId","Date","now","friendUserName","notificationId","notificationDate","scrollToBottom","status","chatList","Object","keys","includes","messageViewStatus","none","$refs","classList","add","containerMessage","remove","date","currentDate","dateStatus","minutes","Math","round","hours","days","weeks","months","years","format","navCollapsed","messageStatusList","messageChatList","forEach","chat","sort","a","b","reverse","computed","nameA","toUpperCase","nameB","toLowerCase","indexOf","storeData","handleChatList","chatUserName","messageObjects","__exports__","render"],"mappings":"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","file":"js/Messages.c32bb05a.js","sourcesContent":["<template>\r\n  <section id=\"messageBox\">\r\n    <div class=\"message-container\">\r\n      <div class=\"list-container-left container-mobile-view  \" ref=\"chatList\">\r\n        <div class=\"chat-list\">\r\n          <div class=\"header-chat-list\">\r\n            <h5>Chats</h5>\r\n            <div class=\"search-chat-list\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search Chats...\"\r\n                v-model=\"searchInput\"\r\n                @click=\"handleSearchBackDrop('open')\"\r\n              />\r\n              <div class=\"search-contents\" v-if=\"displaySearchContents\">\r\n                <ul v-for=\"user in filteredSearchList\" :key=\"user.userName\">\r\n                  <li @click=\"showMessage(user.userName, 'Read')\">\r\n                    <img\r\n                      :src=\"$store.state.users[user.userName].userProfileImage\"\r\n                      alt=\"\"\r\n                    />\r\n                    <span class=\"names-Bold\"> {{ user.userName }}</span>\r\n                  </li>\r\n                </ul>\r\n                <div v-if=\"searchNotFound\" style=\"text-align:center\">\r\n                  User Not Found\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"chat-list-backDrop\"\r\n              v-if=\"chatListBackDrop\"\r\n              @click=\"handleSearchBackDrop('close')\"\r\n            ></div>\r\n          </div>\r\n\r\n          <div\r\n            v-for=\"user in chattedUsersList\"\r\n            :key=\"user.userName\"\r\n            @click=\"showMessage(user.userName, 'Read')\"\r\n            :style=\"activeChattedUser(user.showMessage)\"\r\n            v-if=\"messagesEmpty\"\r\n          >\r\n            <div class=\"user-MessageDetails-container\">\r\n              <div class=\"notice-image-container\">\r\n                <img :src=\"handleImages(user.userName)\" alt=\"\" />\r\n                <div\r\n                  class=\"new-message-alert\"\r\n                  v-if=\"\r\n                    userData.messageStatus[user.userName].messageViewStatus ===\r\n                      'unRead'\r\n                  \"\r\n                ></div>\r\n              </div>\r\n\r\n              <div class=\"userName-data-container\">\r\n                <div class=\"side-userName\">\r\n                  <span class=\"username-header\">{{ user.userName }}</span>\r\n                  <span>{{\r\n                    showDateInWords(\r\n                      chattedUsersInfo[user.userName].messageDate,\r\n                      user.userName\r\n                    )\r\n                  }}</span>\r\n                </div>\r\n\r\n                <div class=\"side-user-message\">\r\n                  <span\r\n                    v-if=\"\r\n                      chattedUsersInfo[user.userName].userName ===\r\n                        userData.userName\r\n                    \"\r\n                    class=\"shortMessage \"\r\n                  >\r\n                    <span style=\"font-weight: 600;\">You:&nbsp</span>\r\n                    <span class=\"message-ellipsis\">{{\r\n                      handleMessageSlice(\r\n                        chattedUsersInfo[user.userName].message\r\n                      )\r\n                    }}</span>\r\n                  </span>\r\n                  <span v-else class=\"shortMessage\">\r\n                    {{\r\n                      handleMessageSlice(\r\n                        chattedUsersInfo[user.userName].message\r\n                      )\r\n                    }}</span\r\n                  >\r\n                  <span class=\"sideMessageCheck\">\r\n                    <font-awesome-icon\r\n                      :icon=\"['fas', 'check']\"\r\n                      class=\"check-side\"\r\n                      v-if=\"\r\n                        handleMessageStatus(\r\n                          chattedUsersInfo[user.userName].messageStatus,\r\n                          chattedUsersInfo[user.userName].messageId\r\n                        )\r\n                      \"\r\n                    />\r\n                    <font-awesome-icon\r\n                      :icon=\"['fas', 'check-double']\"\r\n                      class=\"check-double-side\"\r\n                      v-if=\"\r\n                        !handleMessageStatus(\r\n                          chattedUsersInfo[user.userName].messageStatus,\r\n                          chattedUsersInfo[user.userName].messageId\r\n                        )\r\n                      \"\r\n                      :class=\"\r\n                        handleCheckStyle(\r\n                          chattedUsersInfo[user.userName].messageStatus\r\n                        )\r\n                      \"\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"list-container-left  container-desktop-view\">\r\n        <div class=\"chat-list\">\r\n          <div class=\"header-chat-list\">\r\n            <h5>Chats</h5>\r\n\r\n            <div class=\"search-chat-list\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search Chats...\"\r\n                v-model=\"searchInput\"\r\n                @click=\"handleSearchBackDrop('open')\"\r\n              />\r\n              <div class=\"search-contents\" v-if=\"displaySearchContents\">\r\n                <ul v-for=\"user in filteredSearchList\" :key=\"user.userName\">\r\n                  <li @click=\"showMessage(user.userName, 'Read')\">\r\n                    <img\r\n                      :src=\"$store.state.users[user.userName].userProfileImage\"\r\n                      alt=\"\"\r\n                    />\r\n                    <span class=\"names-Bold\"> {{ user.userName }}</span>\r\n                  </li>\r\n                </ul>\r\n                <div v-if=\"searchNotFound\" style=\"text-align:center\">\r\n                  User Not Found\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"chat-list-backDrop\"\r\n              v-if=\"chatListBackDrop\"\r\n              @click=\"handleSearchBackDrop('close')\"\r\n            ></div>\r\n          </div>\r\n          <div class=\"empty-chat-list\" v-if=\"!messagesEmpty\">\r\n            <span>You Have No Chats</span>\r\n          </div>\r\n          <div></div>\r\n\r\n          <div\r\n            v-for=\"user in chattedUsersList\"\r\n            :key=\"user.userName\"\r\n            @click=\"showMessage(user.userName, 'Read')\"\r\n            :style=\"activeChattedUser(user.showMessage)\"\r\n            v-if=\"messagesEmpty\"\r\n          >\r\n            <div class=\"user-MessageDetails-container\">\r\n              <div class=\"notice-image-container\">\r\n                <img :src=\"handleImages(user.userName)\" alt=\"\" />\r\n                <div\r\n                  class=\"new-message-alert\"\r\n                  v-if=\"\r\n                    userData.messageStatus[user.userName].messageViewStatus ===\r\n                      'unRead'\r\n                  \"\r\n                ></div>\r\n              </div>\r\n\r\n              <div class=\"userName-data-container\">\r\n                <div class=\"side-userName\">\r\n                  <span class=\"username-header\">{{ user.userName }}</span>\r\n                  <span>{{\r\n                    showDateInWords(chattedUsersInfo[user.userName].messageDate)\r\n                  }}</span>\r\n                </div>\r\n\r\n                <div class=\"side-user-message\">\r\n                  <span\r\n                    v-if=\"\r\n                      chattedUsersInfo[user.userName].userName ===\r\n                        userData.userName\r\n                    \"\r\n                    class=\"shortMessage\"\r\n                  >\r\n                    <span style=\"font-weight: 600;\">You:&nbsp</span>\r\n                    <span class=\"message-ellipsis\">{{\r\n                      handleMessageSlice(\r\n                        chattedUsersInfo[user.userName].message\r\n                      )\r\n                    }}</span>\r\n                  </span>\r\n                  <span v-else class=\"shortMessage\">\r\n                    {{\r\n                      handleMessageSlice(\r\n                        chattedUsersInfo[user.userName].message\r\n                      )\r\n                    }}</span\r\n                  >\r\n                  <span class=\"sideMessageCheck\">\r\n                    <font-awesome-icon\r\n                      :icon=\"['fas', 'check']\"\r\n                      class=\"check-side\"\r\n                      v-if=\"\r\n                        handleMessageStatus(\r\n                          chattedUsersInfo[user.userName].messageStatus,\r\n                          chattedUsersInfo[user.userName].messageId\r\n                        )\r\n                      \"\r\n                    />\r\n                    <font-awesome-icon\r\n                      :icon=\"['fas', 'check-double']\"\r\n                      class=\"check-double-side\"\r\n                      v-if=\"\r\n                        !handleMessageStatus(\r\n                          chattedUsersInfo[user.userName].messageStatus,\r\n                          chattedUsersInfo[user.userName].messageId\r\n                        )\r\n                      \"\r\n                      :class=\"\r\n                        handleCheckStyle(\r\n                          chattedUsersInfo[user.userName].messageStatus\r\n                        )\r\n                      \"\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"container-message  container-desktop-view\">\r\n        <div class=\"fill-up-container\" :style=\"filUpStyle\"></div>\r\n        <div class=\"messager-Header\" :style=\"handleNavCollapse()\">\r\n          <img :src=\"userProfilePicture\" alt=\"\" v-if=\"messagesEmpty\" />\r\n\r\n          <h5>{{ friendMessaged }}</h5>\r\n          <span @click=\"showChatList\" class=\"return-chatlist-btn\">\r\n            <span>\r\n              <font-awesome-icon :icon=\"['fas', 'chevron-left']\" />\r\n            </span>\r\n          </span>\r\n        </div>\r\n        <div class=\"trysrcoll\" id=\"messageBody\">\r\n          <div class=\"empty-chat-list\" v-if=\"!messagesEmpty\">\r\n            <span>You Have No Messages</span>\r\n          </div>\r\n\r\n          <div class=\"pulldown\"></div>\r\n\r\n          <div\r\n            v-for=\"message in showingMessages\"\r\n            :key=\"message.messageId\"\r\n            class=\"message-body  message-body-disktopView\"\r\n            :class=\"handleUserChatBoxStyle(message.userName)\"\r\n            v-if=\"messagesEmpty\"\r\n          >\r\n            <img\r\n              :src=\"handleImages(message.userName)\"\r\n              v-if=\"message.messageStatus.length\"\r\n              alt=\"\"\r\n            />\r\n            <div class=\"message-Box\" v-if=\"message.messageStatus.length\">\r\n              <font-awesome-icon\r\n                :icon=\"['fas', 'caret-right']\"\r\n                class=\"caret-right\"\r\n              />\r\n              <font-awesome-icon\r\n                :icon=\"['fas', 'caret-left']\"\r\n                class=\"caret-left\"\r\n              />\r\n              <div>\r\n                <h6 class=\"username-header\">{{ message.userName }}</h6>\r\n\r\n                <span>{{ showDate(message.messageDate) }} </span>\r\n              </div>\r\n              <hr />\r\n              <span class=\"message-background\">\r\n                {{ message.message }}\r\n              </span>\r\n\r\n              <span class=\"message-status\">\r\n                <font-awesome-icon\r\n                  :icon=\"['fas', 'check']\"\r\n                  class=\"check\"\r\n                  v-if=\"\r\n                    handleMessageStatus(\r\n                      message.messageStatus,\r\n                      message.messageId\r\n                    )\r\n                  \"\r\n                />\r\n                <font-awesome-icon\r\n                  :icon=\"['fas', 'check-double']\"\r\n                  class=\"check-double\"\r\n                  v-if=\"\r\n                    !handleMessageStatus(\r\n                      message.messageStatus,\r\n                      message.messageId\r\n                    )\r\n                  \"\r\n                  :class=\"handleCheckStyle(message.messageStatus)\"\r\n                />\r\n              </span>\r\n            </div>\r\n            <!-- <p>  {{moment().format('LT')}} </p> -->\r\n\r\n            <!-- \r\n        <input type=\"text\" value=\"delete message\" class=\"btn btn-danger\" @click=\"\r\n            handleDeleteMessage(\r\n              userData.userName,\r\n              friendMessaged,\r\n              message.messageId\r\n            )\r\n          \" /> -->\r\n          </div>\r\n        </div>\r\n        <form @submit.prevent=\"handleSubmitMessage\" class=\"message-input-field\">\r\n          <input\r\n            type=\"text\"\r\n            v-model=\"message\"\r\n            placeholder=\" Type your message\"\r\n          />\r\n          <img :src=\"userData.userProfileImage\" alt=\"\" />\r\n          <!-- <button type=\"submit\" class=\"btn btn-success\">send</button> -->\r\n        </form>\r\n      </div>\r\n\r\n      <div\r\n        class=\"container-message  container-mobile-view  container-mobileView\"\r\n        ref=\"containerMessage\"\r\n      >\r\n        <div class=\"fill-up-container\" :style=\"filUpStyle\"></div>\r\n        <div class=\"messager-Header\" :style=\"handleNavCollapse()\">\r\n          <img :src=\"userProfilePicture\" alt=\"\" v-if=\"messagesEmpty\" />\r\n\r\n          <h5>{{ friendMessaged }}</h5>\r\n          <span @click=\"showChatList\" class=\"return-chatlist-btn\">\r\n            <span>\r\n              <font-awesome-icon :icon=\"['fas', 'chevron-left']\" />\r\n            </span>\r\n          </span>\r\n        </div>\r\n        <div class=\"trysrcoll\" id=\"messageBody\">\r\n          <div class=\"empty-chat-list\" v-if=\"!messagesEmpty\">\r\n            <span>You Have No Messages</span>\r\n          </div>\r\n          <div\r\n            v-for=\"message in showingMessages\"\r\n            :key=\"message.messageId\"\r\n            class=\"message-body\"\r\n            :class=\"handleUserChatBoxStyle(message.userName)\"\r\n            v-if=\"messagesEmpty\"\r\n          >\r\n            <img\r\n              :src=\"handleImages(message.userName)\"\r\n              v-if=\"message.messageStatus.length\"\r\n              alt=\"\"\r\n            />\r\n            <div class=\"message-Box\" v-if=\"message.messageStatus.length\">\r\n              <font-awesome-icon\r\n                :icon=\"['fas', 'caret-right']\"\r\n                class=\"caret-right\"\r\n              />\r\n              <font-awesome-icon\r\n                :icon=\"['fas', 'caret-left']\"\r\n                class=\"caret-left\"\r\n              />\r\n              <div>\r\n                <h6 class=\"username-header\">{{ message.userName }}</h6>\r\n\r\n                <span>{{ showDate(message.messageDate) }} </span>\r\n              </div>\r\n              <hr />\r\n              <span class=\"message-background\">\r\n                {{ message.message }}\r\n              </span>\r\n\r\n              <span class=\"message-status\">\r\n                <font-awesome-icon\r\n                  :icon=\"['fas', 'check']\"\r\n                  class=\"check\"\r\n                  v-if=\"\r\n                    handleMessageStatus(\r\n                      message.messageStatus,\r\n                      message.messageId\r\n                    )\r\n                  \"\r\n                />\r\n                <font-awesome-icon\r\n                  :icon=\"['fas', 'check-double']\"\r\n                  class=\"check-double\"\r\n                  v-if=\"\r\n                    !handleMessageStatus(\r\n                      message.messageStatus,\r\n                      message.messageId\r\n                    )\r\n                  \"\r\n                  :class=\"handleCheckStyle(message.messageStatus)\"\r\n                />\r\n              </span>\r\n            </div>\r\n            <!-- <p>  {{moment().format('LT')}} </p> -->\r\n\r\n            <!-- \r\n        <input type=\"text\" value=\"delete message\" class=\"btn btn-danger\" @click=\"\r\n            handleDeleteMessage(\r\n              userData.userName,\r\n              friendMessaged,\r\n              message.messageId\r\n            )\r\n          \" /> -->\r\n          </div>\r\n        </div>\r\n        <form @submit.prevent=\"handleSubmitMessage\" class=\"message-input-field\">\r\n          <input\r\n            type=\"text\"\r\n            v-model=\"message\"\r\n            placeholder=\" Type your message\"\r\n          />\r\n          <img :src=\"userData.userProfileImage\" alt=\"\" />\r\n          <!-- <button type=\"submit\" class=\"btn btn-success\">send</button> -->\r\n        </form>\r\n      </div>\r\n\r\n      <div class=\"list-container-right \">\r\n        <div class=\"friends-list-container\">\r\n          <div class=\"friends-listHeader\">\r\n            <h5>Friends</h5>\r\n          </div>\r\n          <div class=\"empty-chat-list\" v-if=\"!userData.friends.length\">\r\n            <span>You Have No Friends</span>\r\n          </div>\r\n          <div\r\n            v-for=\"friend in userData.friends\"\r\n            :key=\"friend.userName\"\r\n            v-if=\"userData.friends.length\"\r\n          >\r\n            <div\r\n              @click=\"showMessage(friend.userName, 'newMessage')\"\r\n              class=\"friendLists\"\r\n            >\r\n              <img :src=\"handleImages(friend.userName)\" alt=\"\" />\r\n              <span class=\"username-header\">{{ friend.userName }}</span>\r\n              <div class=\"message-friend\">\r\n                <button class=\"btn btn-success \">Chat</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { uuid } from \"vue-uuid\";\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n  name: \"Messages\",\r\n  props: [\"userName\"],\r\n\r\n  data() {\r\n    return {\r\n      userData: {\r\n        messageStatus: {},\r\n      },\r\n      showingMessage: [],\r\n      friendMessaged: \"\",\r\n      chattedUsersInfo: [],\r\n      message: \"\",\r\n      showingMessageStatus: [],\r\n      chattedUsersList: [],\r\n      messageUserProfilePicture: \"\",\r\n      userProfilePicture: \"\",\r\n      messageUserName: \"\",\r\n      // displayMessage: '',\r\n      displayChatList: \"\",\r\n      filUpStyle: \"\",\r\n      messagesEmpty: true,\r\n      searchInput: \"\",\r\n      displaySearchContents: false,\r\n      filteredSearchLists: [],\r\n      chatListBackDrop: false,\r\n      messages: {},\r\n      watchDelay: true,\r\n    };\r\n  },\r\n  watch: {\r\n    messages: {\r\n      handler(state) {\r\n        setTimeout(() => {\r\n          this.loadData(\"on\");\r\n          this.watchDelay = false;\r\n        }, 2000);\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.loadData(\"on\");\r\n  },\r\n  beforeUnmount() {\r\n    this.loadData(\"off\");\r\n  },\r\n  methods: {\r\n    loadData(messageOnScreen) {\r\n      this.userData = this.$store.state.users[this.userName];\r\n\r\n      if (messageOnScreen === \"on\") {\r\n        this.$store.dispatch(\"handleDisplayFunctions\", {\r\n          activeLink: \"Messages\",\r\n          params: \"activeLink\",\r\n        });\r\n      } else {\r\n        this.$store.dispatch(\"handleDisplayFunctions\", {\r\n          activeLink: \"\",\r\n          params: \"activeLink\",\r\n        });\r\n        this.watchDelay = true;\r\n      }\r\n\r\n      let messageStatus = [];\r\n\r\n      for (const message in this.userData.messageStatus) {\r\n        messageStatus.push(this.userData.messageStatus[message]);\r\n      }\r\n\r\n      if (messageStatus.length) {\r\n        this.showingMessageStatus = messageStatus.filter(\r\n          (message) => message.showMessage\r\n        );\r\n\r\n        this.showingMessage = this.userData.messages[\r\n          this.showingMessageStatus[0].friendMessaged\r\n        ];\r\n\r\n        this.friendMessaged = this.showingMessageStatus[0].friendMessaged;\r\n        this.messagesEmpty = true;\r\n      } else {\r\n        this.messagesEmpty = false;\r\n      }\r\n\r\n      let messagedUserName = this.$store.state.displayFunctions.displayMessage\r\n        .userName;\r\n\r\n      if (messageStatus.length || messagedUserName.length) {\r\n        if (messagedUserName.length) {\r\n          this.showMessage(messagedUserName, \"newMessage\");\r\n        } else {\r\n          this.showMessage(this.friendMessaged, \"Read\", messageOnScreen);\r\n        }\r\n        this.$store.dispatch(\"handleNotificationUpdate\", {\r\n          userName: this.userData.userName,\r\n          notificationStatus: \"Read\",\r\n          notificationType: \"message\",\r\n        });\r\n      }\r\n    },\r\n\r\n    scrollToBottom() {\r\n      const messageBox = document.getElementsByClassName(\"message-body\")[\r\n        document.getElementsByClassName(\"message-body\").length - 1\r\n      ];\r\n      const messageBoxDisktopView = document.getElementsByClassName(\r\n        \"message-body-disktopView\"\r\n      )[document.getElementsByClassName(\"message-body-disktopView\").length - 1];\r\n\r\n      setTimeout(() => {\r\n        if (messageBox) {\r\n          messageBox.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n      }, 100);\r\n\r\n      setTimeout(() => {\r\n        if (messageBoxDisktopView) {\r\n          messageBoxDisktopView.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n      }, 100);\r\n    },\r\n\r\n    activeChattedUser(show) {\r\n      if (show) {\r\n        return \"background-color:rgba(232, 62, 140, 0.52)\";\r\n      }\r\n\r\n      return \"background-color:white\";\r\n    },\r\n\r\n    handleSearchBackDrop(params) {\r\n      if (params === \"open\") {\r\n        return (this.chatListBackDrop = true);\r\n      }\r\n      this.searchInput = \"\";\r\n      this.displaySearchContents = false;\r\n      this.filteredSearchLists = [];\r\n      return (this.chatListBackDrop = false);\r\n    },\r\n\r\n    handleMessageSlice(message) {\r\n      if (message.length > 15) {\r\n        let slicedMessage = message.slice(0, 14) + \"....\";\r\n        return slicedMessage;\r\n      }\r\n\r\n      return message;\r\n    },\r\n\r\n    handleUserChatBoxStyle(userName) {\r\n      if (userName === this.userName) {\r\n        return \"this-user\";\r\n      }\r\n      return \"other-user\";\r\n    },\r\n\r\n    handleImages(userName) {\r\n      if (this.$store.state.users[userName].userProfileImage.length) {\r\n        return this.$store.state.users[userName].userProfileImage;\r\n      }\r\n\r\n      return \"https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/512x512/plain/user.png\";\r\n    },\r\n\r\n    handleSubmitMessage() {\r\n      const messageId = uuid.v1();\r\n      if (this.message && this.friendMessaged) {\r\n        this.$store.dispatch(\"handleSubmitMessage\", {\r\n          [messageId]: {\r\n            userName: this.userData.userName,\r\n            friendMessaged: this.friendMessaged,\r\n            userId: this.userData.userId,\r\n            message: this.message,\r\n            messageId,\r\n            messageDate: Date.now(),\r\n            messageStatus: \"sent\",\r\n          },\r\n        });\r\n        this.showMessage(this.friendMessaged, \"unRead\");\r\n\r\n        this.$store.dispatch(\"handleNotifications\", {\r\n          userName: this.userData.userName,\r\n          friendUserName: this.friendMessaged,\r\n          notificationId: uuid.v1(),\r\n          notificationType: \"message\",\r\n          notificationStatus: \"unRead\",\r\n          notificationDate: Date.now(),\r\n        });\r\n\r\n        this.message = \"\";\r\n        this.showingMessage = this.userData.messages[this.friendMessaged];\r\n      }\r\n      this.scrollToBottom();\r\n    },\r\n\r\n    showMessage(userName, status, messageOnScreen) {\r\n      this.userProfilePicture = this.handleImages(userName);\r\n      this.friendMessaged = userName;\r\n      let chatList = Object.keys(this.userData.messageStatus);\r\n\r\n      if (!chatList.includes(userName) && status === \"newMessage\") {\r\n        this.showingMessage = {\r\n          none: {\r\n            messageId: \"none\",\r\n            messageDate: \"\",\r\n            userName: this.userName,\r\n            message: \"\",\r\n            messageStatus: \"\",\r\n          },\r\n        };\r\n        this.messagesEmpty = true;\r\n\r\n        this.$store.dispatch(\"handleDisplayFunctions\", {\r\n          userName: \"\",\r\n          params: \"displayMessage\",\r\n        });\r\n      } else {\r\n        this.$store.dispatch(\"handleMessageViewStatus\", {\r\n          friendMessaged: userName,\r\n          messageOnScreen,\r\n          userName: this.userName,\r\n          messageViewStatus: status,\r\n          showMessage: false,\r\n        });\r\n        this.showingMessage = this.userData.messages[userName];\r\n      }\r\n      this.$refs.chatList.classList.add(\"container-mobileView\");\r\n      this.$refs.containerMessage.classList.remove(\"container-mobileView\");\r\n      this.handleSearchBackDrop(\"close\");\r\n    },\r\n\r\n    showChatList() {\r\n      this.$refs.containerMessage.classList.add(\"container-mobileView\");\r\n      this.$refs.chatList.classList.remove(\"container-mobileView\");\r\n    },\r\n\r\n    handleMessageStatus(messageStatus, messageId) {\r\n      if (messageStatus === \"sent\") {\r\n        return true;\r\n      } else if (messageStatus === \"received\") {\r\n        return false;\r\n      } else if (messageStatus === \"Read\") {\r\n        return false;\r\n      }\r\n    },\r\n    handleCheckStyle(messageStatus) {\r\n      if (messageStatus === \"received\") {\r\n        return \"check-double\";\r\n      }\r\n      return \"check-double-read\";\r\n    },\r\n\r\n    showDateInWords(date, userName) {\r\n      const currentDate = Date.now();\r\n      const dateStatus = currentDate - date;\r\n      const minutes = Math.round(dateStatus / (1000 * 60));\r\n      const hours = Math.round(dateStatus / (1000 * 60 * 60));\r\n      const days = Math.round(dateStatus / (1000 * 60 * 60 * 24));\r\n      const weeks = Math.round(dateStatus / (1000 * 60 * 60 * 24 * 7));\r\n      const months = Math.round(dateStatus / (1000 * 60 * 60 * 24 * 7 * 12));\r\n      const years = Math.round(dateStatus / (1000 * 60 * 60 * 365));\r\n\r\n      if (minutes <= 0) {\r\n        return \"Just now\";\r\n      } else if (minutes < 60) {\r\n        return minutes === 1 ? \"1 minute ago\" : minutes + \" minutes ago\";\r\n      } else if (hours < 24) {\r\n        return hours === 1 ? \"1 hour ago\" : hours + \" hours ago\";\r\n      } else if (days < 7) {\r\n        return days === 1 ? \"1 day ago\" : days + \" days ago\";\r\n      } else if (weeks < 4) {\r\n        return weeks === 1 ? \"1 week ago\" : weeks + \" weeks ago\";\r\n      } else if (months < 12) {\r\n        return months === 1 ? \"1 month ago\" : months + \" mouths ago\";\r\n      } else {\r\n        return years === 1 ? \"1 year ago\" : years + \" years ago\";\r\n      }\r\n    },\r\n\r\n    showDate(messageDate) {\r\n      let currentDate = Date.now();\r\n      let dateStatus = currentDate - messageDate;\r\n      const minutes = Math.round(dateStatus / (1000 * 60));\r\n      const hours = Math.round(dateStatus / (1000 * 60 * 60));\r\n      const days = Math.round(dateStatus / (1000 * 60 * 60 * 24));\r\n      const weeks = Math.round(dateStatus / (1000 * 60 * 60 * 24 * 7));\r\n      const months = Math.round(dateStatus / (1000 * 60 * 60 * 24 * 7 * 12));\r\n      const years = Math.round(dateStatus / (1000 * 60 * 60 * 365));\r\n\r\n      if (minutes <= 0) {\r\n        return \"Just now\";\r\n      } else if (minutes < 60) {\r\n        return minutes === 1 ? \"1 minute ago\" : minutes + \"minutes ago\";\r\n      } else if (hours < 24) {\r\n        return moment(messageDate).format(\" h:mm :ss a L\");\r\n      } else if (days < 7) {\r\n        return moment(messageDate).format(\" h:mm:ss a L\");\r\n      } else if (weeks < 4) {\r\n        return moment(messageDate).format(\" h:mm :ss a L\");\r\n      } else if (months < 12) {\r\n        return moment(messageDate).format(\" h:mm :SS a L\");\r\n      } else {\r\n        return moment(messageDate).format(\" h:mm a  L\");\r\n      }\r\n    },\r\n\r\n    handleDeleteMessage(userName, friendMessaged, messageId) {\r\n      this.$store.dispatch(\"handleDeleteMessage\", {\r\n        userName,\r\n        friendMessaged,\r\n        messageId,\r\n      });\r\n    },\r\n    handleNavCollapse() {\r\n      if (this.$store.state.displayFunctions.navCollapsed) {\r\n        this.filUpStyle = \"height:130px\";\r\n        return \"margin-top:-90px\";\r\n      }\r\n      this.filUpStyle = \"height:160px\";\r\n\r\n      return \"margin-top:0\";\r\n    },\r\n\r\n    handleChatList() {\r\n      let messageStatusList = Object.keys(this.userData.messageStatus);\r\n      let messageChatList = [];\r\n      messageStatusList.forEach((chat) => {\r\n        messageChatList = [\r\n          ...messageChatList,\r\n          {\r\n            userName: chat,\r\n            showMessage: this.userData.messageStatus[chat].showMessage,\r\n            messageDate: this.userData.messageStatus[chat].messageDate,\r\n          },\r\n        ];\r\n      });\r\n\r\n      this.chattedUsersList = messageChatList\r\n        .sort((a, b) => a.messageDate - b.messageDate)\r\n        .reverse();\r\n    },\r\n  },\r\n  computed: {\r\n    filteredSearchList() {\r\n      let filteredSearchList = this.chattedUsersList\r\n        .sort(function(a, b) {\r\n          var nameA = a.userName.toUpperCase();\r\n          var nameB = b.userName.toUpperCase();\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        })\r\n        .filter((user) => {\r\n          return (\r\n            user.userName\r\n              .toLowerCase()\r\n              .indexOf(this.searchInput.toLowerCase()) !== -1\r\n          );\r\n        });\r\n\r\n      this.filteredSearchLists = filteredSearchList;\r\n\r\n      return this.filteredSearchLists;\r\n    },\r\n\r\n    searchNotFound() {\r\n      if (this.filteredSearchLists.length) {\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n\r\n    showingMessages() {\r\n      this.userData = this.$store.state.users[this.userName];\r\n      this.messages = this.$store.state.users[this.userName].messages;\r\n      this.storeData = this.$store.state;\r\n      this.searchInput.length\r\n        ? (this.displaySearchContents = true)\r\n        : (this.displaySearchContents = false);\r\n\r\n      this.handleChatList();\r\n\r\n      let chattedUsersInfo = {};\r\n\r\n      for (const chatUserName in this.userData.messageStatus) {\r\n        let messageObjects = [];\r\n        for (const messageId in this.userData.messages[chatUserName]) {\r\n          messageObjects = [\r\n            ...messageObjects,\r\n            this.userData.messages[chatUserName][messageId],\r\n          ].sort((a, b) => a.messageDate - b.messageDate);\r\n        }\r\n        chattedUsersInfo = {\r\n          ...chattedUsersInfo,\r\n          [chatUserName]: messageObjects[messageObjects.length - 1],\r\n        };\r\n      }\r\n\r\n      this.chattedUsersInfo = chattedUsersInfo;\r\n\r\n      let showingMessages = [];\r\n\r\n      for (const message in this.showingMessage) {\r\n        showingMessages.push(this.showingMessage[message]);\r\n      }\r\n      return showingMessages.sort((a, b) => a.messageDate - b.messageDate);\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./Messages.vue?vue&type=template&id=234d8c35\"\nimport script from \"./Messages.vue?vue&type=script&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\GitHub-Files\\\\SoMedia\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}