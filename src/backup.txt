<template>

  <nav>
        <div class="nav-container-one">
            <div class="logo-container">
                <h3>SoMedia</h3>


<span class="search-icon">{{''}}<font-awesome-icon :icon="['fas', 'search']"   /> </span>

                <input type="text" placeholder=" Search for Friends..." v-model="searchInput">


            </div>

            <ul class="website-info">
                <li> <a href="#about">About</a> <font-awesome-icon :icon="['fas', 'info']"   /></li>
                <li> <a href="#contact">Contact</a>  <font-awesome-icon :icon="['fas', 'phone-square-alt']"   /></li>
                <li> <button class="log-out">Logout <font-awesome-icon :icon="['fas', 'sign-out-alt']" v-if="true"  />
<font-awesome-icon :icon="['fas', 'sign-in-alt']" v-if="false"  />
</button>
    <!-- <button @click="handleLogin('')" class="btn btn-danger m-1" v-if="logout">LogOut</button>
 <button @click="handleLogin('login')" class="btn btn-success m-1" v-if="updataUserData" >LogIn</button> -->
</li>
            </ul>


            <div class="user-icon">


                <span ref="userImage" class="userImage" @click="handleUserOwnMenu"> <img
                        :src="this.userData.userThumbnail" alt="Thumbnail"> {{userData.userName}}
                 <font-awesome-icon :icon="['fas', 'sort-down']" v-if="dropIconDisplay" ref="sortDown" />
                    <font-awesome-icon :icon="['fas', 'sort-up']" v-if="!dropIconDisplay" ref="sortUp" />
                    <div class="dropdown-OwnMenu" ref="userOwnMenu">
                        <ul>
                            <li>Friends</li>
                            <li>Followers</li>
                            <li>Following</li>
                            <li>Chats</li>

                        </ul>
                    </div>

                </span>

            </div>

        </div>


        <div class="nav-container-two">

            <ul class="home-list">
                <li ref="home"   @click="handleActiveLink('home')" class="active-link  lists">
            <router-link :to="{ name: 'Home' }">Home</router-link>
                    <font-awesome-icon :icon="['fas', 'home']" ref="homeIcon" />
                </li>
                <li class="lists" ref="newsFeed" @click="handleActiveLink('newsFeed')">Newsfeed
                    <font-awesome-icon :icon="['fas', 'newspaper']" ref="newsFeedIcon" />
                </li>

                <li class="lists" ref="timeline" @click="handleActiveLink('timeline')">
 <router-link :to="{name:'Timeline',params:{userName:$store.state.userData.userName,Timeline:'Timeline'}}">Timeline</router-link>
                    <font-awesome-icon :icon="['fas', 'user-clock']" ref="timelineIcon" /><span
                        class="show-counter">1</span>
                </li>
                <li class="lists" ref="profile" @click="handleActiveLink('profile')">
    <router-link
              :to="{
                name: 'userProfile',
                params: { userName: $store.state.userData.userName },
              }"
            >
              Profile
            </router-link>
                    <font-awesome-icon :icon="['fas', 'user']" ref="profileIcon" />
                </li>
                <li class="lists" ref="messages" @click="handleActiveLink('messages')">Messages
                    <font-awesome-icon :icon="['fas', 'envelope']" ref="messageIcon" /><span
                        class="show-counter-messages">1</span>
                </li>
                <li class="lists" ref="notifications" 
                    @click="handleNotifications('notifications')">
                    Notifications
        <font-awesome-icon :icon="['fas', 'bell']" ref="notificationIcon" />
<span
                        class="show-counter-notification">1</span> 
                    <div class="dropdown-notifications" ref="notificationMenu">
  <font-awesome-icon :icon="['fas', 'sort-up']" class="pointer-part" />
                        <a href="#home">Home</a>
                        <a href="#about">About</a>
                        <a href="#contact">Contact</a>
                    </div>
                </li>

            </ul>

            <div class="user-icon">


                <span ref="userImage" class="userImage" @click="handleUserOwnMenu"> <img
                        :src="this.userData.userThumbnail" alt="Thumbnail"> {{userData.userName}}
                    <font-awesome-icon :icon="['fas', 'sort-down']" v-if="dropIconDisplay" ref="sortDown" />
                    <font-awesome-icon :icon="['fas', 'sort-up']" v-if="!dropIconDisplay" ref="sortUp" />

                    <div class="dropdown-OwnMenu" ref="userOwnMenu">
                    <font-awesome-icon :icon="['fas', 'sort-up']" class="pointer-part" />

                        <ul>
                            <li>Friends</li>
                            <li>Followers</li>
                            <li>Following</li>
                            <li>Chats</li>
                         
                        </ul>
                    </div>

                </span>

            </div>

        </div>


    </nav>






























        
               
    
          


          


           

  <router-view />
</template>

<script>

export default {
  name: "App",
  data() {
    return {
 userDatas: {
                    userName: "uche okoroafor",
                    userThumbnail: require('../assets/userThumpNail/original1.jpg'),

                },
      userData:this.updataUserData,
login:true,
logout:false,
 notificationState: false,
                userOwnMenu: false,
                activeLink: "home",
                searchInput: '',
                dropIconDisplay: true,
      }
    },
 created() {
            window.addEventListener('click', (event) => this.handleCloseDropDown(event))
        },
        unmounted() {

            window.removeEventListener('click', (event) => this.handleCloseDropDown(event))
        },

      methods: {

        handleLogin(params) {
if(params){


return this.$router.push({ name: "Login" });
}

this.login = true
this.logout = false
          this.$router.push({ name: "Login" });
          this.$store.dispatch("updateUserData", {
            Guest: {
              userName: "Guest",
              emailAddress: "",
              password: "",
              emailAddress: "419",
              firstName: "",
              lastName: "",
              address: "",
              emailAddress: "",
              postCode: "",
              country: "",
              city: "",
              aboutMe: "",
              messages: [],
              posts: [],
              followers: [],
              following: [],
              friends: [],
            },
          });



          },
 handleCloseDropDown(e) {

                let noticeMenu = this.$refs.notifications
                let ownMenu = this.$refs.userImage
                let target = e.target
                if (ownMenu !== target && !ownMenu.contains(target) && this.userOwnMenu === true) {

                    this.handleUserOwnMenu()
                }

                if (noticeMenu !== target && !noticeMenu.contains(target) && this.notificationState === true) {
                    this.handleNotifications()

                }

            },
  handleUserOwnMenu() {
                if (this.userOwnMenu) {
                    this.$refs.userOwnMenu.style = "display:none;height:0;transition:all 1s"
                    this.dropIconDisplay = !this.dropIconDisplay
                }
                else {
                    this.$refs.userOwnMenu.style = "display:flex;height:auto;transition:all 1s";
                    this.dropIconDisplay = !this.dropIconDisplay
                }
                this.userOwnMenu = !this.userOwnMenu

            },
  handleActiveLink(activeLink) {
                this.$refs.[this.activeLink].classList.remove("active-link")
                this.$refs.[activeLink].classList.add("active-link")
                this.activeLink = activeLink

            },

            handleNotifications() {
                this.notificationState ? this.$refs.notificationMenu.style = "display:none;height:0;transition:all 1s" : this.$refs.notificationMenu.style = "display:flex;height:auto;transition:all 1s"

                this.notificationState = !this.notificationState
            },


      },
computed:{

updataUserData(){
const userData = this.$store.state.userData
let login = true
if(this.$store.state.userData.userName !== "Guest"){
login=false
this.logout =true
} else{login=true}
return login
}

}




};
</script>



<style>



</style>






















  <nav class="navbar navbar-icon-top navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="#">SoMedia</a>
    <button
      class="navbar-toggler"
      type="button"
      data-toggle="collapse"
      data-target="#navbarSupportedContent"
      aria-controls="navbarSupportedContent"
      aria-expanded="false"
      aria-label="Toggle navigation"
    >
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav mr-auto">
        <li class="nav-item active">
          <a class="nav-link" href="#">
            <i class="fa fa-home"></i>
            <router-link :to="{ name: 'Home' }">Home</router-link>
            <span class="sr-only">(current)</span>
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">
            <i class="fa fa-envelope-o">
              <span class="badge badge-danger">11</span>
            </i>
            <router-link :to="{name:'Timeline',params:{userName:$store.state.userData.userName,Timeline:'Timeline'}}">Timeline</router-link>
          </a>
        </li>
<!-- ,Timeline:'Timeline' -->
        <li class="nav-item" v-if="$store.state.userData.status === 'online'">
          <a class="nav-link" href="#">
            <i class="fa fa-envelope-o">
              <span class="badge badge-warning">11</span>
            </i>
            <router-link
              :to="{
                name: 'userProfile',
                params: { userName: $store.state.userData.userName },
              }"
            >
              My Profile
            </router-link>
          </a>
        </li>

        <li class="nav-item dropdown">
          <a
            class="nav-link dropdown-toggle"
            href="#"
            id="navbarDropdown"
            role="button"
            data-toggle="dropdown"
            aria-haspopup="true"
            aria-expanded="false"
          >
            <i class="fa fa-envelope-o">
              <span class="badge badge-primary">11</span>
            </i>
            Dropdown
          </a>
          <div class="dropdown-menu" aria-labelledby="navbarDropdown">
            <a class="dropdown-item" href="#">Action</a>
            <a class="dropdown-item" href="#">Another action</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="#">Something else here</a>
          </div>
        </li>
      </ul>
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link" href="#">
            <i class="fa fa-bell">
              <span class="badge badge-info">11</span>
            </i>
            Test
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">
            <i class="fa fa-globe">
              <span class="badge badge-success">11</span>
            </i>
            Test
          </a>
        </li>
      </ul>
      <form class="form-inline my-2 my-lg-0" @submit.prevent="handleLogin">
        <input
          class="form-control mr-sm-2"
          type="text"
          placeholder="Search"
          aria-label="Search"
        />
        <button class="btn btn-outline-success my-2 my-sm-0" type="submit">
          Search
        </button>
      </form>
    </div>
    <button @click="handleLogin('')" class="btn btn-danger m-1" v-if="logout">LogOut</button>
 <button @click="handleLogin('login')" class="btn btn-success m-1" v-if="updataUserData" >LogIn</button>
  </nav>